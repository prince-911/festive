login.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Login Page</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #1e1e1e;
    }

    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: linear-gradient(135deg, #878baa, #be94a5, #878baa, rgb(163, 175, 140));
    }

    .card {
      display: flex;
      width: 800px;
      height: 450px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
      border-radius: 10px;
      overflow: hidden;
    }

    .image-container {
      flex: 1;
    }

    .image-container img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .form-container {
      flex: 1;
      background-color: white;
      padding: 40px;
      box-sizing: border-box;
    }

    h2 {
      text-align: center;
      margin-bottom: 1rem;
    }

    .select, .datafield {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    .button {
      width: 100%;
      padding: 10px;
      background-color: #4a55b8;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin: 10px 0;
    }

    .button:hover {
      background-color: #3a4474;
    }

    .link {
      text-align: center;
      margin-top: 1rem;
    }

    .link a {
      color: #007BFF;
      text-decoration: none;
    }

    .link a:hover {
      text-decoration: underline;
    }

    .flash-message {
      margin: 10px auto;
      padding: 10px 20px;
      background-color: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
      animation: fadeOut 1s ease-out 2s forwards;
    }

    @keyframes fadeOut {
      to {
        opacity: 0;
        visibility: hidden;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="card">
      <div class="image-container">
        <img src="{{ url_for('static', filename='img/login.webp') }}" alt="Login Image">
      </div>
      <div class="form-container">
        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <div class="flash-message">{{ message }}</div>
            {% endfor %}
          {% endif %}
        {% endwith %}

        <h2>LOGIN</h2>
        <form action="/login" method="POST" autocomplete="off">
          {{ res.hidden_tag() }}

          <!-- User Role Selection -->
          {{ res.userrole(class_="select") }}<br><br>

          <!-- Email Field -->
          {{ res.email.label }}<br>
          {{ res.email(class_="datafield", placeholder="User Name") }}<br>
          {% for error in res.email.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          <!-- Password Field -->
          {{ res.password.label }}<br>
          {{ res.password(class_="datafield", placeholder="Password") }}<br>
          {% for error in res.password.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          <!-- Submit Button -->
          {{ res.submit(class_="button") }}

          <div class="link">
            <p>Don't have an account? <a href="/register">Register here</a></p>
          </div>
        </form>
      </div>
    </div>
  </div>
</body>
</html>

form.py
from flask_wtf import FlaskForm
from wtforms import StringField,PasswordField,EmailField,IntegerField,SubmitField,DateField,SelectField,TimeField,RadioField
from wtforms.validators import DataRequired,Regexp,Length,EqualTo

class LoginForm(FlaskForm):
   userrole=SelectField("Role",validators=[DataRequired()],choices=[('','Select The Role'),('user','User'),('admin','Admin')])
   email=EmailField("Email Id",validators=[DataRequired(),Length(max=50),Regexp(r'[^@]+@[^@]+\.[^@]+', message='Invalid Email Address')], render_kw = {"placeholder": "Email Address", "class": "datafield"})
   password=PasswordField("Password",validators=[DataRequired(),Length(min=6,max=50,message='Password consist of at least 1 capital,small,alphanumeric charater'),Regexp(r'(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$',message='Invalid Password')],render_kw={"placeholder": "Password", "class": "datafield"})
   submit=SubmitField("Submit")

class RegisterForm(FlaskForm):
   userrole=SelectField("Role",validators=[DataRequired()],choices=[('','Select The Role'),('user','User'),('admin','Admin')])
   name=StringField("Full Name",validators=[DataRequired(),Length(max=100),Regexp(r'^([A-Z][a-z]+)( [A-Z][a-z]+){1,2}',message='Name is not valid')],render_kw={"placeholder": "Name", "class": "datafield"})
   email=StringField("Email",validators=[DataRequired(),Length(max=50),Regexp(r'[^@]+@[^@]+\.[^@]+',message='Invalid Email Address')], render_kw = {"placeholder": "Email Address", "class": "datafield"})
   gender=RadioField("Gender",validators=[DataRequired()],choices=[('female','Female'),('male','Male'),('others','Others')])
   phone=StringField("Phone Number",validators=[DataRequired(),Regexp(r'^\d{10}$',message='Phone is not valid')],render_kw={"placeholder": "Phone Number", "class": "datafield"})
   password=PasswordField("Password",validators=[DataRequired(),Length(min=6,max=50,message='Password consist of at least 1 capital,small,alphanumeric charater'),Regexp(r'(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$',message='Invalid Password')],render_kw={"placeholder": "Password", "class": "datafield"})
   confirmpassword=PasswordField("Confirm Password",validators=[DataRequired(),EqualTo('password',message='Confirm Password must match Password')],render_kw = {"placeholder": "Confirm Password", "class": "datafield"})
   submit=SubmitField("Submit")

class BookingForm(FlaskForm):
   date=DateField("Date",validators=[DataRequired()],render_kw={ "class": "datafield"})
   starttime=TimeField("Start Time",validators=[DataRequired()],render_kw={ "class": "datafield"})
   endtime=TimeField("End Time",validators=[DataRequired()],render_kw={"class": "datafield"})
   location=SelectField("Location",validators=[DataRequired()],choices=[('','Select The Location'),('banglore','Banglore'),('pune','Pune'),('manglore','Manglore')])
   submit=SubmitField("BOOK NOW")     

      
   


