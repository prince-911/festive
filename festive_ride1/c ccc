register.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>REGISTER PAGE</title>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .register-container {
      display: flex;
      justify-content: center;
      align-items: flex-start;
      padding-top: 40px;
      min-height: 100vh;
      background: linear-gradient(135deg, #878baa,#be94a5,#878baa,rgb(163, 175, 140));
      padding-left: 20px;
      padding-right: 20px;
    }

    .register-card {
      display: flex;
      width: 900px;
      max-width: 100%;
      border-radius: 10px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
      overflow: hidden;
      background-color: white;
      flex-direction: row;
      flex-wrap: wrap;
    }

    .image-container {
      flex: 1;
      min-width: 300px;
      background: url('https://cdn.dribbble.com/users/2026576/screenshots/16392415/media/8a9e3b221f007994f22d802a3944079d.png') no-repeat center;
      background-size: cover;
      height: auto;
    }

    .form-container {
      flex: 1;
      min-width: 300px;
      padding: 40px;
    }

    h2 {
      text-align: center;
      margin-bottom: 1rem;
    }

    .select, .datafield {
      width: 100%;
      padding: 10px;
      margin-top: 10px;
      margin-bottom: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    .button {
      width: 100%;
      padding: 10px;
      background-color: #4a55b8;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 10px;
    }

    .button:hover {
      background-color: #3a4474;
    }

    .radio {
      display: flex;
      gap: 10px;
      margin-top: 10px;
      margin-bottom: 20px;
    }

    .link {
      text-align: center;
      margin-top: 20px;
    }

    .link a {
      color: #007BFF;
      text-decoration: none;
    }

    .link a:hover {
      text-decoration: underline;
    }

    .flash-message {
      margin: 20px auto;
      padding: 15px 25px;
      width: 50%;
      background-color: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
      animation: fadeOut 1s ease-out 1s forwards;
    }

    @keyframes fadeOut {
      to {
        opacity: 0;
        visibility: hidden;
      }
    }

    @media (max-width: 768px) {
      .register-card {
        flex-direction: column;
        align-items: center;
      }

      .image-container {
        height: 200px;
        background-position: center top;
        width: 100%;
      }

      .form-container {
        padding: 20px;
        width: 100%;
      }
    }
  </style>
</head>
<body>

  <div class="register-container">
    {% with messages=get_flashed_messages(with_categories=true) %}
      {% if messages %}
        {% for category, message in messages %}
          <div class="flash-message">{{ message }}</div>
        {% endfor %}
      {% endif %}
    {% endwith %}

    <div class="register-card">
      <div class="image-container"></div>
      <div class="form-container">
        <h2>REGISTER YOURSELF</h2>
        <form action="/register" method="POST">
          {{ res.csrf_token }}
          {{ res.hidden_tag() }}

          {{ res.userrole.label }}
          {{ res.userrole(class_="select") }}

          {{ res.name(class_="datafield", placeholder="Full Name") }}
          {% for error in res.name.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          {{ res.gender.label }}<br>
          <div class="radio">
            {% for ch in res.gender %}
              {{ ch }} {{ ch.label }}
            {% endfor %}
          </div>

          {{ res.phone(class_="datafield", placeholder="Phone Number") }}
          {% for error in res.phone.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          {{ res.email(class_="datafield", placeholder="Email Address") }}
          {% for error in res.email.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          {{ res.password(class_="datafield", placeholder="Password") }}
          {% for error in res.password.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          {{ res.confirmpassword(class_="datafield", placeholder="Confirm Password") }}
          {% for error in res.confirmpassword.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          {{ res.submit(class_="button") }}

          <div class="link">
            Already have an account? <a href="/login">Log In</a>
          </div>
        </form>
      </div>
    </div>
  </div>
</body>
</html>

form.py
from flask_wtf import FlaskForm
from wtforms import StringField,PasswordField,EmailField,IntegerField,SubmitField,DateField,SelectField,TimeField,RadioField
from wtforms.validators import DataRequired,Regexp,Length,EqualTo

class LoginForm(FlaskForm):
   userrole=SelectField("Role",validators=[DataRequired()],choices=[('','Select The Role'),('user','User'),('admin','Admin')])
   email=EmailField("Email Id",validators=[DataRequired(),Length(max=50),Regexp(r'[^@]+@[^@]+\.[^@]+', message='Invalid Email Address')], render_kw = {"placeholder": "Email Address", "class": "datafield"})
   password=PasswordField("Password",validators=[DataRequired(),Length(min=6,max=50,message='Password consist of at least 1 capital,small,alphanumeric charater'),Regexp(r'(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$',message='Invalid Password')],render_kw={"placeholder": "Password", "class": "datafield"})
   submit=SubmitField("Submit")

class RegisterForm(FlaskForm):
   userrole=SelectField("Role",validators=[DataRequired()],choices=[('','Select The Role'),('user','User'),('admin','Admin')])
   name=StringField("Full Name",validators=[DataRequired(),Length(max=100),Regexp(r'^([A-Z][a-z]+)( [A-Z][a-z]+){1,2}',message='Name is not valid')],render_kw={"placeholder": "Name", "class": "datafield"})
   email=EmailField("Email",validators=[DataRequired(),Length(max=50),Regexp(r'[^@]+@[^@]+\.[^@]+',message='Invalid Email Address')], render_kw = {"placeholder": "Email Address", "class": "datafield"})
   gender=RadioField("Gender",validators=[DataRequired()],choices=[('female','Female'),('male','Male'),('others','Others')])
   phone=StringField("Phone Number",validators=[DataRequired(),Regexp(r'^\d{10}$',message='Phone is not valid')],render_kw={"placeholder": "Phone Number", "class": "datafield"})
   password=PasswordField("Password",validators=[DataRequired(),Length(min=6,max=50,message='Password consist of at least 1 capital,small,alphanumeric charater'),Regexp(r'(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$',message='Invalid Password')],render_kw={"placeholder": "Password", "class": "datafield"})
   confirmpassword=PasswordField("Confirm Password",validators=[DataRequired(),EqualTo('password',message='Confirm Password must match Password')],render_kw = {"placeholder": "Confirm Password", "class": "datafield"})
   submit=SubmitField("Submit")

class BookingForm(FlaskForm):
   date=DateField("Date",validators=[DataRequired()],render_kw={ "class": "datafield"})
   starttime=TimeField("Start Time",validators=[DataRequired()],render_kw={ "class": "datafield"})
   endtime=TimeField("End Time",validators=[DataRequired()],render_kw={"class": "datafield"})
   location=SelectField("Location",validators=[DataRequired()],choices=[('','Select The Location'),('banglore','Banglore'),('pune','Pune'),('manglore','Manglore')])
   submit=SubmitField("BOOK NOW")     

      
   

